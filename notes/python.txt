To install Python modules in a particular location:
   python setup.py install --prefix <path>

Get script name:
   os.path.basename( sys.argv[0] )

Get script path:
   sys.path[0]

Module location:
   moduleName.__file__
   __file__ for current module.  Not defined when run as script.


A common theme is to translate a CLI arg into an object, necessitating a dictionary from string to an instance of a class type:
   def addInstanceToDict(targetsDict, targetName, classType):
      targetsDict[targetName] = classType(targetName)
   targetsG = {}
   addInstanceToDict(targetsG, 'option1', Class1)
   addInstanceToDict(targetsG, 'option2', Class2)

pexpect:
   Patch a file:
      patchProc = pexpect.spawn('patch -p0')
      patchProc.send(patchString)
      patchProc.sendcontrol('d')

Quick start to get _Cmd:
  class Error(Exception):
    """Module level errors."""


  def _Cmd(cmd_str):
    child = subprocess.Popen("bash",
                             stdout=subprocess.PIPE,
                             stderr=subprocess.PIPE,
                             stdin=subprocess.PIPE)
    (out, err) = child.communicate(cmd_str)
    if child.returncode:
      raise Error("Shell command failed with errno:{} cmd:{} stderr:{}".format(
          child.returncode, cmd_str, err))
    return out
